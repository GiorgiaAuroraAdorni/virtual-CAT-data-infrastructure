INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (7, 3, 'COPY({PAINT({red}, 2, diagonal up right), GO(1 right), PAINT({yellow}, 2, diagonal up left)}, {c1, e3, c3, a3, c5})', 2, 'Five squares composed of two diagonals');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (2, 1, 'GO(d1), PAINT({blue}), GO(c1), PAINT({blue}), GO(d2), PAINT({blue}), GO(c2), PAINT({blue}), GO(f3), PAINT({blue}), GO(e3), PAINT({blue}), GO(d3), PAINT({blue}), GO(c3), PAINT({blue}), GO(b3), PAINT({blue}), GO(a3), PAINT({blue}), GO(f4), PAINT({yellow}), GO(e4), PAINT({yellow}), GO(d4), PAINT({yellow}), GO(c4), PAINT({yellow}), GO(b4), PAINT({yellow}), GO(a4), PAINT({yellow}), GO(d5), PAINT({yellow}), GO(c5), PAINT({yellow}), GO(d6), PAINT({yellow}), GO(c6), PAINT({yellow})', 0, 'Point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (1, 2, 'FILL_EMPTY(blue)', 1, 'All blue');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (1, 1, 'GO(d1), PAINT({blue}), GO(c1), PAINT({blue}), GO(d2), PAINT({blue}), GO(c2), PAINT({blue}), GO(f3), PAINT({blue}), GO(e3), PAINT({blue}), GO(d3), PAINT({blue}), GO(c3), PAINT({blue}), GO(b3), PAINT({blue}), GO(a3), PAINT({blue}), GO(f4), PAINT({blue}), GO(e4), PAINT({blue}), GO(d4), PAINT({blue}), GO(c4), PAINT({blue}), GO(b4), PAINT({blue}), GO(a4), PAINT({blue}), GO(d5), PAINT({blue}), GO(c5), PAINT({blue}), GO(d6), PAINT({blue}), GO(c6), PAINT({blue})', 0, 'Point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (4, 3, 'GO(d1), PAINT({yellow}, :, down), GO(d2), PAINT({red}, :, down), GO(f3), PAINT({blue}, :, down), GO(f4), PAINT({yellow}, :, down), GO(d5), PAINT({red}, :, down), GO(d6), PAINT({blue}, :, down)', 1, 'Column by column');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (3, 3, 'GO(d1), PAINT({yellow}, :, down), GO(d2), PAINT({red}, :, down), GO(f3), PAINT({yellow}, :, down), GO(f4), PAINT({red}, :, down), GO(d5), PAINT({yellow}, :, down), GO(d6), PAINT({red}, :, down)', 1, 'Column by column');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (8, 4, 'GO(d1), PAINT({yellow, red}, :, down), GO(d2), PAINT({red, blue}, :, down), GO(f3), PAINT({yellow, red}, :, down), GO(f4), PAINT({red, blue}, :, down), GO(d5), PAINT({yellow, red}, :, down), GO(d6), PAINT({red, blue}, :, down)', 2, 'Column by column alternated');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (11, 8, 'GO(f3), PAINT({blue}, :, right), GO(c3), PAINT({yellow}, 2, right), GO(b3), PAINT({blue}, :, right), GO(a3), PAINT({yellow}, :, right), MIRROR({GO(d2), PAINT({blue})}, vertical), GO(d1), PAINT({green}), GO(e3), PAINT({green}), GO(e4), PAINT({green}), GO(d6), PAINT({green}), FILL_EMPTY(red)', 1, 'Blue and yellow in pairs');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (6, 3, 'GO(d1), PAINT({blue}, 3, right), GO(e3), PAINT({blue}, 2, up), GO(d4), PAINT({green}, 3, right), GO(e4), PAINT({green}, 2, up), GO(c4), PAINT({red}, 3, right), GO(b4), PAINT({red}, 2, down), GO(c3), PAINT({yellow}, 3, left), GO(b3), PAINT({yellow}, 2, down)', 1, 'Four Ls split in two');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (5, 2, 'GO(c1), PAINT({red}, :, square), GO(f3), PAINT({yellow}, :, down), GO(f4), PAINT({blue}, :, down), GO(c5), PAINT({green}, :, square)', 1, 'Two squares in both sides');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (7, 5, 'GO(d1), PAINT({yellow, red}, :, down), GO(d2), PAINT({red, yellow}, :, down), GO(f3), PAINT({yellow, red}, :, down), GO(f4), PAINT({red, yellow}, :, down), GO(d5), PAINT({yellow, red}, :, down), GO(d6), PAINT({red, yellow}, :, down)', 2, 'Alternated columns');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (7, 2, null, 2, 'Chessboard');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (8, 8, null, 2, 'Red alternated one yes and one no vertically and horizontally, yellow among reds in the first columns and in  the first row, the others blue');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (10, 26, 'GO(d1), PAINT({yellow, blue}, :, down), GO(d2), PAINT({blue, yellow}, :, down), GO(f3), PAINT({blue}), GO(e3), PAINT({yellow}, 2, down), GO(c3), PAINT({blue}, 2, down), GO(a3), PAINT({yellow}), MIRROR(, vertical)', 2, null);
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (12, 7, 'GO(d1), PAINT({yellow}), GO(c1), PAINT({blue}), GO(d2), PAINT({green}), GO(c2), PAINT({red}), GO(f3), PAINT({blue}), GO(e3), PAINT({red}), GO(d3), PAINT({blue}), GO(c3), PAINT({green}), GO(b3), PAINT({yellow}), GO(a3), PAINT({red}), GO(f4), PAINT({green}), GO(e4), PAINT({yellow}), GO(d4), PAINT({green}), GO(c4), PAINT({blue}), GO(b4), PAINT({red}), GO(a4), PAINT({yellow}), GO(d5), PAINT({blue}), GO(c5), PAINT({yellow}), GO(d6), PAINT({red}), GO(c6), PAINT({green})', 0, 'Point by point column by column');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (7, 4, 'COPY({PAINT({red}), GO(1 right), PAINT({yellow}), GO(1 up), PAINT({red}), GO(1 left), PAINT({yellow})}, {c1, e3, c3, a3, c5})', 2, 'Five squares point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (7, 6, 'GO(d1), PAINT({yellow, red}, :, down), GO(d2), PAINT({red, yellow}, :, down), GO(f3), PAINT({yellow, red}, :, down), GO(f4), PAINT({red, yellow}, :, down), GO(d5), PAINT({yellow, red}, :, down), GO(d6), PAINT({red, yellow}, :, down), GO(f3), PAINT({yellow, red}, :, right), GO(e3), PAINT({red, yellow}, :, right), GO(d1), PAINT({yellow, red}, :, right), GO(c1), PAINT({red, yellow}, :, right), GO(b3), PAINT({yellow, red}, :, right), GO(a3), PAINT({red, yellow}, :, right)', 2, 'Alternated columns and rows (with redundancy)');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (7, 7, 'GO(d1), PAINT({yellow, red}, :, right), GO(c1), PAINT({red, yellow}, :, right), GO(f3), PAINT({yellow, red}, :, down), GO(f4), PAINT({red, yellow}, :, down), GO(d6), PAINT({red, yellow}, :, left), GO(c6), PAINT({yellow, red}, :, left), GO(a4), PAINT({yellow, red}, :, up), GO(a3), PAINT({red, yellow}, :, up)', 2, 'Alternated starting from the edges');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (7, 15, 'GO(d1), PAINT({yellow}), GO(d2), PAINT({red}), GO(d3), PAINT({yellow}), GO(d4), PAINT({red}), GO(d5), PAINT({yellow}), GO(d6), PAINT({red}), GO(c1), PAINT({red}), GO(c2), PAINT({yellow}), GO(c3), PAINT({red}), GO(c4), PAINT({yellow}), GO(c5), PAINT({red}), GO(c6), PAINT({yellow}), COPY({PAINT({yellow}, 2, diagonal down right), GO(1 down), PAINT({red}, 2, diagonal up right)}, {f3, b3})', 2, 'Two rows point by point, two squares equals');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (7, 18, 'GO(f3), PAINT({yellow}, :, zig-zag down right left), GO(f4), PAINT({red}, :, zig-zag down left right), GO(d1), PAINT({yellow}, :, zig-zag right down up), GO(c1), PAINT({red}, :, zig-zag right up down)', 1, ' Vertical and horizontal zig zag');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (8, 11, 'GO(d1), PAINT({yellow, red}, :, right), GO(c1), PAINT({red, blue}, :, right), GO(f3), PAINT({yellow}), GO(f4), PAINT({red}), GO(e3), PAINT({red}), GO(e4), PAINT({blue}), GO(b3), PAINT({yellow}), GO(b4), PAINT({red}), GO(a3), PAINT({red}), GO(a4), PAINT({blue})', 2, 'Two rows alternated, two squares point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (8, 21, 'GO(c1), PAINT({red}, 2, diagonal up right), GO(c5), PAINT({red}, 2, diagonal up right), GO(f3), PAINT({yellow}), GO(d3), PAINT({yellow}), GO(b3), PAINT({yellow}), GO(d1), PAINT({yellow}), GO(d5), PAINT({yellow}), GO(e4), PAINT({blue}), GO(c4), PAINT({blue}), GO(a4), PAINT({blue}), GO(c2), PAINT({blue}), GO(c6), PAINT({blue}), GO(f4), PAINT({red}), GO(e3), PAINT({red}), GO(d4), PAINT({red}), GO(c3), PAINT({red}), GO(b4), PAINT({red}), GO(a3), PAINT({red})', 1, 'Two squares with diagonal, the remaining point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (8, 17, 'GO(d1), PAINT({yellow, red}, :, right), GO(c1), PAINT({red, blue}, :, right), GO(e3), PAINT({red}, 2, diagonal up right), GO(f3), PAINT({yellow}), GO(e4), PAINT({blue}), GO(a3), PAINT({red}, 2, diagonal up right), GO(b3), PAINT({yellow}), GO(a4), PAINT({blue})', 2, 'Two rows alternated, two squares with diagonals');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (2, 2, null, 1, 'Split vertically, blu on the left, yellow on the right');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (11, 6, 'COPY({PAINT({blue}), GO(1 down), PAINT({green}), GO(1 down), PAINT({red}), GO(1 down), PAINT({yellow}), GO(1 down), PAINT({blue}), GO(1 down), PAINT({yellow})}, {f3, f4}), GO(d1), PAINT({green}), GO(d2), PAINT({blue}), GO(d3), PAINT({red}), GO(d4), PAINT({red}), GO(d5), PAINT({blue}), GO(d6), PAINT({green}), GO(c1), PAINT({red}), GO(c2), PAINT({red}), GO(c3), PAINT({yellow}), GO(c4), PAINT({yellow}), GO(c5), PAINT({red}), GO(c6), PAINT({red})', 2, 'Two identical columns point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (2, 5, 'GO(c1), PAINT({blue}, :, square), GO(f3), PAINT({blue}, :, down), FILL_EMPTY(yellow)', 1, 'One square on the left blue, central left colum blue, the remaining in yellow');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (11, 9, 'GO(f3), PAINT({blue}, :, right), GO(e3), PAINT({green}, :, right), GO(c3), PAINT({yellow}, 2, right), GO(b3), PAINT({blue}, :, right), GO(a3), PAINT({yellow}, :, right), MIRROR({GO(d1), PAINT({green})}, vertical), MIRROR({GO(d2), PAINT({blue})}, vertical), FILL_EMPTY(red)', 1, 'Blue');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (11, 11, 'GO(d1), PAINT({green}), GO(d2), PAINT({blue}), GO(d3), PAINT({red}, 2, right), GO(d5), PAINT({blue}), GO(d6), PAINT({green}), GO(c1), PAINT({red}, 2, right), GO(c3), PAINT({yellow}, 2, right), GO(c5), PAINT({red}, 2, right), GO(f3), PAINT({blue}, :, right), GO(e3), PAINT({green}, :, right), GO(b3), PAINT({blue}, :, right), GO(a3), PAINT({yellow}, :, right)', 1, 'Two columns row by row');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (6, 2, 'GO(d1), PAINT({blue}, :, L right up), GO(f4), PAINT({green}, :, L down right), GO(c6), PAINT({red}, :, L left down), GO(a3), PAINT({yellow}, :, L up left)', 1, 'Four Ls');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (9, 4, 'GO(d1), PAINT({blue, red}, :, down), GO(d2), PAINT({green, yellow}, :, down), GO(f3), PAINT({blue, red}, :, down), GO(f4), PAINT({green, yellow}, :, down), GO(d5), PAINT({blue, red}, :, down), GO(d6), PAINT({green, yellow}, :, down)', 2, 'Column by column alternated');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (10, 7, 'GO(d1), PAINT({yellow}), GO(d2), PAINT({blue}), GO(d3), PAINT({yellow}, 2, right), GO(d5), PAINT({blue}), GO(d6), PAINT({yellow}), GO(c1), PAINT({blue}), GO(c2), PAINT({yellow}), GO(c3), PAINT({blue}, 2, right), GO(c5), PAINT({yellow}), GO(c6), PAINT({blue}), GO(f3), PAINT({blue}, :, right), GO(e3), PAINT({yellow}, :, right), GO(b3), PAINT({blue}, :, right), GO(a3), PAINT({yellow}, :, right)', 1, 'Two columns row by row');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (10, 2, null, 2, 'Inverted symmetry for the two columns');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (10, 10, null, 2, 'Two identical squares up and down with pairs, two symmetric rows with pair of points');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (1, 3, 'GO(c1), PAINT({blue}, :, square), GO(a3), PAINT({blue}, :, square), GO(c3), PAINT({blue}, :, square), GO(e3), PAINT({blue}, :, square), GO(c5), PAINT({blue}, :, square)', 2, 'Five squares all blue');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (1, 4, 'COPY({PAINT({blue}, :, down)}, {f3, f4}), COPY({PAINT({blue}, :, right)}, {d1, c1})', 2, 'Two columns and two rows');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (1, 5, 'GO(d1), PAINT({blue}, 3, right), GO(e3), PAINT({blue}, 2, up), GO(d4), PAINT({blue}, 3, right), GO(e4), PAINT({blue}, 2, up), GO(c4), PAINT({blue}, 3, right), GO(b4), PAINT({blue}, 2, down), GO(c3), PAINT({blue}, 3, left), GO(b3), PAINT({blue}, 2, down)', 1, 'Four L split in two');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (2, 4, 'GO(c1), PAINT({blue}, :, square), GO(f3), PAINT({blue}, :, down), GO(f4), PAINT({yellow}, :, down), GO(c5), PAINT({yellow}, :, square)', 1, 'Two columns and two squares on the sides');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (2, 7, 'GO(d1), PAINT({blue}), GO(c1), PAINT({blue}), GO(d2), PAINT({blue}), GO(c2), PAINT({blue}), GO(f3), PAINT({blue}), GO(e3), PAINT({blue}), GO(d3), PAINT({blue}), GO(c3), PAINT({blue}), GO(b3), PAINT({blue}), GO(a3), PAINT({blue}), FILL_EMPTY(yellow)', 1, 'Half point by point, the remaining of one colour');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (2, 6, 'GO(f3), PAINT({blue}, :, down), GO(f4), PAINT({yellow}, :, down), GO(d1), PAINT({blue}, 2, right), GO(c1), PAINT({blue}, 2, right), GO(d5), PAINT({yellow}, 2, right), GO(c5), PAINT({yellow}, 2, right)', 1, 'Two columns and the sides row by row');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (2, 3, 'GO(f3), PAINT({blue}, :, down), GO(f4), PAINT({yellow}, :, down), GO(d1), PAINT({blue}, 3, right), GO(d4), PAINT({yellow}, 3, right), GO(c1), PAINT({blue}, 3, right), GO(c4), PAINT({yellow}, 3, right)', 2, 'Two columns and two rows');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (3, 2, 'COPY({PAINT({yellow}, :, down), GO(right), PAINT({red}, :, down)}, {d1, f3, d5})', 2, 'Alternate columns');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (3, 5, 'COPY({PAINT({yellow}, :, down), GO(right), PAINT({red}, :, down)}, {d1, d5}), GO(f3), PAINT({yellow}, :, down), GO(f4), PAINT({red}, :, down)', 2, 'Column by column, to identical sides');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (3, 8, 'GO(d1), PAINT({yellow}, :, down), GO(f3), PAINT({yellow}, :, down), GO(d5), PAINT({yellow}, :, down), FILL_EMPTY(red)', 1, 'One colour column by column, the remaining of the other colour');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (3, 10, 'GO(f4), PAINT({red}, 2, down), GO(d4), PAINT({red}, 2, down), GO(b4), PAINT({red}, 2, down), GO(d5), PAINT({yellow}, :, down), GO(d6), PAINT({red}, :, down), GO(d1), PAINT({yellow}, :, down), GO(d2), PAINT({red}, :, down), GO(f3), PAINT({yellow}, :, down), ', 1, 'One column with pairs of two, the remaining column by column');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (4, 2, 'COPY({PAINT({yellow}, :, down), GO(right), PAINT({red}, :, down), GO(right), PAINT({blue}, :, down)}, {d1, f4})', 1, 'Repeat three columns');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (4, 7, 'GO(f3), PAINT({blue}, :, down), GO(f4), PAINT({yellow}, :, down), GO(d1), PAINT({yellow}), GO(c1), PAINT({yellow}), GO(d2), PAINT({red}), GO(c2), PAINT({red}), GO(d5), PAINT({red}, :, down), GO(d6), PAINT({blue}, :, down)', 1, 'Two columns');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (6, 5, 'GO(d1), PAINT({blue}), GO(c1), PAINT({yellow}), GO(d2), PAINT({blue}), GO(c2), PAINT({yellow}), GO(f3), PAINT({blue}, 3, down), GO(c3), PAINT({yellow}, 3, down), GO(f4), PAINT({green}, 3, down), GO(c4), PAINT({red}, 3, down), GO(d5), PAINT({green}), GO(c5), PAINT({red}), GO(d6), PAINT({green}), GO(c6), PAINT({red})', 1, 'Column by column');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (8, 2, 'COPY({PAINT({red}, 2, diagonal up right), GO(1 up), PAINT({yellow}), GO(1 right), GO(1 down), PAINT({blue})}, {c1, e3, c3, a3, c5})', 2, 'Five squares with red diagonal and two points');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (9, 8, 'GO(f3), PAINT({blue, red}, :, down), GO(f4), PAINT({green, yellow}, :, down), GO(d1), PAINT({blue, green}, :, right), GO(c1), PAINT({red, yellow}, :, right)', 2, 'Repeated and alternated columns and row');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (10, 6, 'COPY({PAINT({blue}), GO(1 down), PAINT({yellow}), GO(1 down), PAINT({yellow}), GO(1 down), PAINT({blue}), GO(1 down), PAINT({blue}), GO(1 down), PAINT({yellow})}, {f3, f4}), GO(d1), PAINT({yellow}), GO(c1), PAINT({blue}), GO(d2), PAINT({blue}), GO(c2), PAINT({yellow}), GO(d5), PAINT({blue}), GO(c5), PAINT({yellow}), GO(d6), PAINT({yellow}), GO(c6), PAINT({blue})', 2, 'Two identical columns point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (10, 15, 'COPY({PAINT({blue}), GO(1 down), PAINT({yellow}), GO(1 down), PAINT({yellow}), GO(1 down), PAINT({blue}), GO(1 down), PAINT({blue}), GO(1 down), PAINT({yellow})}, {f3, f4}), MIRROR({GO(d1), PAINT({yellow}), GO(d2), PAINT({blue}), GO(c1), PAINT({blue}), GO(c2), PAINT({yellow})}, vertical)', 2, 'Two identical columns point by point, two symmetric squares point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (11, 10, 'COPY({PAINT({blue}), GO(1 down), PAINT({green}), GO(1 down), PAINT({red}), GO(1 down), PAINT({yellow}), GO(1 down), PAINT({blue}), GO(1 down), PAINT({yellow})}, {f3, f4}), GO(d1), PAINT({green}), GO(d2), PAINT({blue}), GO(c1), PAINT({red}, 2, right), GO(d5), PAINT({blue}), GO(d6), PAINT({green}), GO(c5), PAINT({red}, 2, right)', 2, 'Two identical columns point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (11, 3, 'GO(f3), PAINT({blue}, :, right), GO(e3), PAINT({green}, :, right), GO(d3), PAINT({red}, 2, right), GO(c3), PAINT({yellow}, 2, right), GO(b3), PAINT({blue}, :, right), GO(a3), PAINT({yellow}, :, right), MIRROR({GO(d1), PAINT({green}), GO(d2), PAINT({blue}), GO(c1), PAINT({red}, 2, right)}, vertical)', 2, 'Two columns row by row');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (11, 5, 'GO(f3), PAINT({blue}, :, right), GO(e3), PAINT({green}, :, right), GO(d3), PAINT({red}, 2, right), GO(c3), PAINT({yellow}, 2, right), GO(b3), PAINT({blue}, :, right), GO(a3), PAINT({yellow}, :, right), GO(d1), PAINT({green}), GO(d2), PAINT({blue}), GO(c1), PAINT({red}), GO(c2), PAINT({red}), GO(d5), PAINT({blue}), GO(d6), PAINT({green}), GO(c5), PAINT({red}), GO(c6), PAINT({red})', 1, 'Two columns row by row');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (11, 13, 'GO(f3), PAINT({blue}, :, right), GO(e3), PAINT({green}, :, right), GO(d3), PAINT({red}, 2, right), GO(c3), PAINT({yellow}, 2, right), GO(b3), PAINT({blue}, :, right), GO(a3), PAINT({yellow}, :, right), MIRROR({GO(d1), PAINT({green}), GO(d2), PAINT({blue}), GO(c1), PAINT({red}, 2, right)}, vertical)', 2, 'Two columns with 4 pairs');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (11, 15, 'COPY({PAINT({blue}), GO(1 down), PAINT({green}), GO(1 down), PAINT({red}), GO(1 down), PAINT({yellow}), GO(1 down), PAINT({blue}), GO(1 down), PAINT({yellow})}, {f3, f4}), GO(d1), PAINT({green}), GO(d2), PAINT({blue}), GO(c1), PAINT({red}, 2, right), GO(d5), PAINT({blue}), GO(c5), PAINT({red}), GO(d6), PAINT({green}), GO(c6), PAINT({red})', 2, 'Two columns row by row');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (11, 4, 'GO(d1), PAINT({green}), GO(c1), PAINT({red}), GO(d2), PAINT({blue}), GO(c2), PAINT({red}), MIRROR({GO(f3), PAINT({blue}), GO(e3), PAINT({green}), GO(d3), PAINT({red}), GO(c3), PAINT({yellow}), GO(b3), PAINT({blue}), GO(a3), PAINT({yellow})}, vertical), GO(d5), PAINT({blue}), GO(c5), PAINT({red}), GO(d6), PAINT({green}), GO(c6), PAINT({red})', 2, 'Two identical columns point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (12, 1, 'GO(f3), PAINT({blue}), GO(f4), PAINT({green}), GO(e3), PAINT({red}), GO(e4), PAINT({yellow}), GO(d1), PAINT({yellow}), GO(d2), PAINT({green}), GO(d3), PAINT({blue}), GO(d4), PAINT({green}), GO(d5), PAINT({blue}), GO(d6), PAINT({red}), GO(c1), PAINT({blue}), GO(c2), PAINT({red}), GO(c3), PAINT({green}), GO(c4), PAINT({blue}), GO(c5), PAINT({yellow}), GO(c6), PAINT({green}), GO(b3), PAINT({yellow}), GO(b4), PAINT({red}), GO(a3), PAINT({red}), GO(a4), PAINT({yellow})', 0, 'Point by point row by row');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (3, 1, 'GO(d1), PAINT({yellow}), GO(c1), PAINT({yellow}), GO(d2), PAINT({red}), GO(c2), PAINT({red}), GO(f3), PAINT({yellow}), GO(e3), PAINT({yellow}), GO(d3), PAINT({yellow}), GO(c3), PAINT({yellow}), GO(b3), PAINT({yellow}), GO(a3), PAINT({yellow}), GO(f4), PAINT({red}), GO(e4), PAINT({red}), GO(d4), PAINT({red}), GO(c4), PAINT({red}), GO(b4), PAINT({red}), GO(a4), PAINT({red}), GO(d5), PAINT({yellow}), GO(c5), PAINT({yellow}), GO(d6), PAINT({red}), GO(c6), PAINT({red})', 0, 'Point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (3, 4, 'GO(d1), PAINT({yellow}, 2, down), GO(right), PAINT({red}, 2, down), GO(right), PAINT({yellow}, 2, down), GO(right), PAINT({red}, 2, down), GO(right), PAINT({yellow}, 2, down), GO(right), PAINT({red}, 2, down), GO(f3), PAINT({yellow}, :, down), GO(f4), PAINT({red}, :, down)', 1, 'Column by column (with redundancy)');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (3, 7, 'GO(f3), PAINT({yellow}, :, down), GO(f4), PAINT({red}, :, down), GO(d1), PAINT({yellow}), GO(c1), PAINT({yellow}), GO(d2), PAINT({red}), GO(c2), PAINT({red}), GO(d5), PAINT({yellow}), GO(c5), PAINT({yellow}), GO(d6), PAINT({red}), GO(c6), PAINT({red})', 1, 'Two columns, squares point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (3, 6, 'GO(d1), PAINT({yellow}, 2, down), GO(right), PAINT({red}, 2, down), GO(right), PAINT({yellow}, 2, down), GO(right), PAINT({red}, 2, down), GO(right), PAINT({yellow}, 2, down), GO(right), PAINT({red}, 2, down), GO(f3), PAINT({yellow}), GO(e3), PAINT({yellow}), GO(f4), PAINT({red}), GO(e4), PAINT({red}), GO(b3), PAINT({yellow}), GO(a3), PAINT({yellow}), GO(b4), PAINT({red}), GO(a4), PAINT({red})', 1, 'Two rows column by column, point by point up and down');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (3, 9, 'GO(d1), PAINT({yellow}, 2, down), GO(right), PAINT({red}, 2, down), GO(right), PAINT({yellow}, 2, down), GO(right), PAINT({red}, 2, down), GO(right), PAINT({yellow}, 2, down), GO(right), PAINT({red}, 2, down), GO(f3), PAINT({yellow}, 2, down), GO(f4), PAINT({red}, 2, down), GO(b3), PAINT({yellow}, 2, down), GO(b4), PAINT({red}, 2, down)', 1, 'Two rows column by column, the remaining column by column');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (4, 1, 'GO(d1), PAINT({yellow}), GO(c1), PAINT({yellow}), GO(d2), PAINT({red}), GO(c2), PAINT({red}), GO(f3), PAINT({blue}), GO(e3), PAINT({blue}), GO(d3), PAINT({blue}), GO(c3), PAINT({blue}), GO(b3), PAINT({blue}), GO(a3), PAINT({blue}), GO(f4), PAINT({yellow}), GO(e4), PAINT({yellow}), GO(d4), PAINT({yellow}), GO(c4), PAINT({yellow}), GO(b4), PAINT({yellow}), GO(a4), PAINT({yellow}), GO(d5), PAINT({red}), GO(c5), PAINT({red}), GO(d6), PAINT({blue}), GO(c6), PAINT({blue})', 0, 'Point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (4, 6, 'GO(d1), PAINT({yellow}, :, down), GO(d2), PAINT({red}, :, down), GO(d3), PAINT({blue}, 2, down), GO(d4), PAINT({yellow}, 2, down), GO(d5), PAINT({red}, :, down), GO(d6), PAINT({blue}, :, down), GO(f3), PAINT({blue}), GO(e3), PAINT({blue}), GO(f4), PAINT({yellow}), GO(e4), PAINT({yellow}), GO(b3), PAINT({blue}), GO(a3), PAINT({blue}), GO(b4), PAINT({yellow}), GO(a4), PAINT({yellow})', 1, 'Two rows column by column');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (4, 8, 'GO(d1), PAINT({yellow}), GO(c1), PAINT({yellow}), GO(d2), PAINT({red}), GO(c2), PAINT({red}), GO(f3), PAINT({blue}), GO(e3), PAINT({blue}), GO(d3), PAINT({blue}), GO(c3), PAINT({blue}), GO(b3), PAINT({blue}), GO(a3), PAINT({blue}), GO(f4), PAINT({yellow}, :, down), GO(d5), PAINT({red}, :, down), GO(d6), PAINT({blue}, :, down)', 1, 'Half point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (4, 4, 'GO(f3), PAINT({blue}, :, down), GO(f4), PAINT({yellow}, :, down), GO(d1), PAINT({yellow, red, blue}, :, right), GO(c1), PAINT({yellow, red, blue}, :, right)', 1, 'Two columns');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (4, 5, 'GO(d1), PAINT({yellow}, :, down), GO(f3), PAINT({blue}, :, down), GO(f4), PAINT({yellow}, :, down), GO(d6), PAINT({blue}, :, down), FILL_EMPTY(red)', 1, 'Column by column');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (5, 1, 'GO(d1), PAINT({red}), GO(c1), PAINT({red}), GO(d2), PAINT({red}), GO(c2), PAINT({red}), GO(f3), PAINT({yellow}), GO(e3), PAINT({yellow}), GO(d3), PAINT({yellow}), GO(c3), PAINT({yellow}), GO(b3), PAINT({yellow}), GO(a3), PAINT({yellow}), GO(f4), PAINT({blue}), GO(e4), PAINT({blue}), GO(d4), PAINT({blue}), GO(c4), PAINT({blue}), GO(b4), PAINT({blue}), GO(a4), PAINT({blue}), GO(d5), PAINT({green}), GO(c5), PAINT({green}), GO(d6), PAINT({green}), GO(c6), PAINT({green})', 0, 'Point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (5, 3, 'GO(d1), PAINT({red}, :, down), GO(d2), PAINT({red}, :, down), GO(f3), PAINT({yellow}, :, down), GO(f4), PAINT({blue}, :, down), GO(d5), PAINT({green}, :, down), GO(d6), PAINT({green}, :, down)', 1, 'Column by column');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (5, 5, 'GO(c1), PAINT({red}, :, square), GO(f3), PAINT({yellow}), GO(e3), PAINT({yellow}), GO(d3), PAINT({yellow}), GO(c3), PAINT({yellow}), GO(b3), PAINT({yellow}), GO(a3), PAINT({yellow}), GO(f4), PAINT({blue}), GO(e4), PAINT({blue}), GO(d4), PAINT({blue}), GO(c4), PAINT({blue}), GO(b4), PAINT({blue}), GO(a4), PAINT({blue}), GO(c5), PAINT({green}, :, square)', 1, 'Two squares in both sides, columns point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (5, 4, 'GO(d1), PAINT({red}, :, down), GO(d2), PAINT({red}, :, down), GO(f3), PAINT({yellow}, :, down), GO(f4), PAINT({blue}, :, down), GO(c5), PAINT({green}, :, square)', 1, 'Column by column, one square');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (6, 1, 'GO(d1), PAINT({blue}), GO(c1), PAINT({yellow}), GO(d2), PAINT({blue}), GO(c2), PAINT({yellow}), GO(f3), PAINT({blue}), GO(e3), PAINT({blue}), GO(d3), PAINT({blue}), GO(c3), PAINT({yellow}), GO(b3), PAINT({yellow}), GO(a3), PAINT({yellow}), GO(f4), PAINT({green}), GO(e4), PAINT({green}), GO(d4), PAINT({green}), GO(c4), PAINT({red}), GO(b4), PAINT({red}), GO(a4), PAINT({red}), GO(d5), PAINT({green}), GO(c5), PAINT({red}), GO(d6), PAINT({green}), GO(c6), PAINT({red})', 0, 'Point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (6, 6, 'GO(c1), PAINT({yellow}, :, L right down), GO(c6), PAINT({red}, :, L left down), GO(d1), PAINT({blue}, 2, right), GO(d3), PAINT({blue}), GO(e3), PAINT({blue}), GO(f3), PAINT({blue}), GO(d6), PAINT({green}, 2, left), GO(d4), PAINT({green}), GO(e4), PAINT({green}), GO(f4), PAINT({green})', 1, 'Two L');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (6, 7, 'GO(a3), PAINT({yellow}, :, L up left), GO(a4), PAINT({red}, :, L up right), GO(d1), PAINT({blue}, 2, right), GO(d3), PAINT({blue}, 3, up), GO(d6), PAINT({green}, 2, left), GO(d4), PAINT({green}, 3, up)', 1, 'Two L');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (6, 4, 'GO(f3), PAINT({blue}), GO(f4), PAINT({green}), GO(e3), PAINT({blue}), GO(e4), PAINT({green}), GO(d3), PAINT({blue}), GO(d4), PAINT({green}), GO(c3), PAINT({yellow}), GO(c4), PAINT({red}), GO(b3), PAINT({yellow}), GO(b4), PAINT({red}), GO(a3), PAINT({yellow}), GO(a4), PAINT({red}), GO(d1), PAINT({blue}, 2, right), GO(c1), PAINT({yellow}, 2, right), GO(d5), PAINT({green}, 2, right), GO(c5), PAINT({red}, 2, right)', 1, 'Two columns row by row');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (7, 1, 'GO(d1), PAINT({yellow}), GO(c1), PAINT({red}), GO(d2), PAINT({red}), GO(c2), PAINT({yellow}), GO(f3), PAINT({yellow}), GO(e3), PAINT({red}), GO(d3), PAINT({yellow}), GO(c3), PAINT({red}), GO(b3), PAINT({yellow}), GO(a3), PAINT({red}), GO(f4), PAINT({red}), GO(e4), PAINT({yellow}), GO(d4), PAINT({red}), GO(c4), PAINT({yellow}), GO(b4), PAINT({red}), GO(a4), PAINT({yellow}), GO(d5), PAINT({yellow}), GO(c5), PAINT({red}), GO(d6), PAINT({red}), GO(c6), PAINT({yellow})', 0, 'Point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (7, 8, 'GO(d1), PAINT({yellow, red}, :, right), GO(c1), PAINT({red, yellow}, :, right), GO(f3), PAINT({yellow, red}, :, down), GO(f4), PAINT({red, yellow}, :, down)', 2, 'Repeated and alternated columns and row');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (7, 12, 'GO(f3), PAINT({yellow, red}, :, down), GO(f4), PAINT({red, yellow}, :, down), GO(d1), PAINT({yellow}), GO(c1), PAINT({red}), GO(d2), PAINT({red}), GO(c2), PAINT({yellow}), GO(d5), PAINT({yellow}), GO(c5), PAINT({red}), GO(d6), PAINT({red}), GO(c6), PAINT({yellow})', 2, 'Two columns alternated, two squares point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (7, 10, 'GO(d1), PAINT({yellow, red}, :, right), GO(c1), PAINT({red, yellow}, :, right), GO(f3), PAINT({yellow}, 2, diagonal down right), GO(e3), PAINT({red}, 2, diagonal up right), GO(b3), PAINT({yellow}, 2, diagonal down right), GO(a3), PAINT({red}, 2, diagonal up right)', 2, 'Two rows alternated, diagonals in the squares up and down');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (7, 9, 'GO(f3), PAINT({yellow}, :, zig-zag down right left), GO(f4), PAINT({red}, :, zig-zag down left right), GO(d1), PAINT({yellow}), GO(c1), PAINT({red}), GO(d2), PAINT({red}), GO(c2), PAINT({yellow}), GO(d5), PAINT({yellow}), GO(c5), PAINT({red}), GO(d6), PAINT({red}), GO(c6), PAINT({yellow})', 1, 'Two columns alternated with zig zag, point by point on the sides');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (7, 14, 'GO(d1), PAINT({yellow}, :, diagonal down right), GO(f3), PAINT({yellow}, :, diagonal down right), GO(c1), PAINT({red}, :, diagonal up right), GO(a3), PAINT({red}, :, diagonal up right), GO(d3), PAINT({yellow}), GO(d4), PAINT({red}), GO(c3), PAINT({red}), GO(c4), PAINT({yellow})', 1, 'Four diagonals, central square point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (7, 11, 'GO(d1), PAINT({yellow}, :, diagonal down right), GO(d3), PAINT({yellow}, :, diagonal down right), GO(f3), PAINT({yellow}, :, diagonal down right), GO(c1), PAINT({red}, :, diagonal up right), GO(c3), PAINT({red}, :, diagonal up right), GO(a3), PAINT({red}, :, diagonal up right)', 1, 'Diagonal by diagonal');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (7, 13, 'GO(d1), PAINT({yellow}, :, diagonal down right), GO(c1), PAINT({red}, :, diagonal up right), GO(f3), PAINT({yellow}), GO(e4), PAINT({yellow}), GO(d3), PAINT({yellow}), GO(d4), PAINT({red}), GO(c3), PAINT({red}), GO(c4), PAINT({yellow}), GO(b4), PAINT({red}), GO(a3), PAINT({red}), GO(d5), PAINT({yellow}), GO(d6), PAINT({red}), GO(c5), PAINT({red}), GO(c6), PAINT({yellow})', 1, 'Two diagonals, the remaining point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (7, 17, 'GO(d1), PAINT({yellow}), GO(c1), PAINT({red}), GO(d2), PAINT({red}), GO(c2), PAINT({yellow}), GO(f3), PAINT({yellow}), GO(e3), PAINT({red}), GO(d3), PAINT({yellow}), GO(c3), PAINT({red}), GO(b3), PAINT({yellow}), GO(a3), PAINT({red}), GO(f4), PAINT({red}), GO(e4), PAINT({yellow}), GO(d4), PAINT({red}), GO(c4), PAINT({yellow}), GO(b4), PAINT({red}), GO(a4), PAINT({yellow}), GO(d5), PAINT({yellow}, 2, diagonal down right), GO(c5), PAINT({red}, 2, diagonal up right)', 1, 'Point by point, one square composed of diagonals');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (7, 16, 'GO(c1), PAINT({red}, :, diagonal up right), GO(c3), PAINT({red}, :, diagonal up right), GO(a3), PAINT({red}, :, diagonal up right), FILL_EMPTY(yellow)', 1, 'Red diagonals, the remaining yellow');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (7, 19, 'GO(d1), PAINT({yellow}, 2, diagonal down right), GO(b3), PAINT({yellow}, 2, diagonal down right), GO(f3), PAINT({yellow}, 2, diagonal down right), GO(d5), PAINT({yellow}, 2, diagonal down right), GO(d3), PAINT({yellow}, :, diagonal down right), GO(c1), PAINT({red}, 2, diagonal up right), GO(e3), PAINT({red}, 2, diagonal up right), GO(a3), PAINT({red}, 2, diagonal up right), GO(c5), PAINT({red}, 2, diagonal up right), GO(c3), PAINT({red}, :, diagonal up right)', 1, 'Diagonals of two points with intersection (with redundancy)');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (8, 3, 'COPY({PAINT({red}), GO(1 right), PAINT({blue}), GO(1 up), PAINT({red}), GO(1 left), PAINT({yellow})}, {c1, e3, c3, a3, c5})', 2, 'Five squares point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (9, 7, 'GO(d1), PAINT({blue, green}, :, right), GO(c1), PAINT({red, yellow}, :, right), GO(f3), PAINT({blue}), GO(f4), PAINT({green}), GO(e3), PAINT({red}), GO(e4), PAINT({yellow}), GO(b3), PAINT({blue}), GO(b4), PAINT({green}), GO(a3), PAINT({red}), GO(a4), PAINT({yellow})', 2, 'Two rows alternated, two squares point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (9, 2, 'COPY({PAINT({red}), GO(1 right), PAINT({yellow}), GO(1 up), PAINT({green}), GO(1 left), PAINT({blue})}, {c1, e3, c3, a3, c5})', 2, 'Five squares point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (8, 1, 'GO(d1), PAINT({yellow}), GO(c1), PAINT({red}), GO(d2), PAINT({red}), GO(c2), PAINT({blue}), GO(f3), PAINT({yellow}), GO(e3), PAINT({red}), GO(d3), PAINT({yellow}), GO(c3), PAINT({red}), GO(b3), PAINT({yellow}), GO(a3), PAINT({red}), GO(f4), PAINT({red}), GO(e4), PAINT({blue}), GO(d4), PAINT({red}), GO(c4), PAINT({blue}), GO(b4), PAINT({red}), GO(a4), PAINT({blue}), GO(d5), PAINT({yellow}), GO(c5), PAINT({red}), GO(d6), PAINT({red}), GO(c6), PAINT({blue})', 0, 'Point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (8, 5, 'GO(d1), PAINT({yellow, red}, :, down), GO(d2), PAINT({red, blue}, :, down), GO(f3), PAINT({yellow, red}, :, down), GO(f4), PAINT({red, blue}, :, down), GO(d5), PAINT({yellow, red}, :, down), GO(d6), PAINT({red, blue}, :, down), GO(f3), PAINT({yellow, red}, :, right), GO(e3), PAINT({red, blue}, :, right), GO(d1), PAINT({yellow, red}, :, right), GO(c1), PAINT({red, blue}, :, right), GO(b3), PAINT({yellow, red}, :, right), GO(a3), PAINT({red, blue}, :, right)', 2, 'Alternated columns and rows (with redundancy)');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (8, 13, 'GO(d1), PAINT({yellow}), GO(d2), PAINT({red}), GO(d3), PAINT({yellow}), GO(d4), PAINT({red}), GO(d5), PAINT({yellow}), GO(d6), PAINT({red}), GO(c1), PAINT({red}), GO(c2), PAINT({blue}), GO(c3), PAINT({red}), GO(c4), PAINT({blue}), GO(c5), PAINT({red}), GO(c6), PAINT({blue}), COPY({PAINT({red}), GO(1 right), PAINT({blue}), GO(1 up), PAINT({red}), GO(1 left), PAINT({yellow})}, {e3, a3})', 2, 'Two rows point by point, two identical squares point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (8, 15, 'GO(c1), PAINT({red}, :, diagonal up right), GO(c3), PAINT({red}, :, diagonal up right), GO(a3), PAINT({red}, :, diagonal up right), GO(c2), PAINT({blue}), GO(e4), PAINT({blue}), GO(c4), PAINT({blue}), GO(a4), PAINT({blue}), GO(c6), PAINT({blue}), FILL_EMPTY(yellow)', 1, 'Red diagonals, blue point by point, remaining yellow');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (8, 10, 'GO(d1), PAINT({yellow}, :, diagonal up right), GO(c1), PAINT({red}, :, diagonal up right), GO(c2), PAINT({blue, yellow}, :, diagonal up right), GO(c3), PAINT({red}, :, diagonal up right), GO(b3), PAINT({yellow, blue}, :, diagonal up right), GO(a3), PAINT({red}, :, diagonal up right), GO(a4), PAINT({blue}, :, diagonal up right)', 1, 'Diagonal by diagonal');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (8, 14, 'GO(d1), PAINT({yellow}), GO(d2), PAINT({red}), GO(d3), PAINT({yellow}), GO(d4), PAINT({red}), GO(d5), PAINT({yellow}), GO(d6), PAINT({red}), GO(c1), PAINT({red}), GO(c2), PAINT({blue}), GO(c3), PAINT({red}), GO(c4), PAINT({blue}), GO(c5), PAINT({red}), GO(c6), PAINT({blue}), COPY({PAINT({red}, 2, diagonal up right), GO(1 right), PAINT({blue}), GO(diagonal up left), PAINT({yellow})}, {e3, a3})', 2, 'Two row point by point, two identical squares with diagonal');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (8, 12, 'GO(d1), PAINT({yellow, red}, :, right), GO(c1), PAINT({red, blue}, :, right), GO(f3), PAINT({yellow, red}, :, down), GO(f4), PAINT({red, blue}, :, down)', 2, 'Repeated and alternated columns and row');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (8, 6, 'COPY({PAINT({yellow, red}, :, down), GO(1 right), PAINT({red, blue}, :, down)}, {d1, f3, d5}), COPY({PAINT({yellow, red}, :, right), GO(1 down), PAINT({red, blue}, :, right)}, {f3, d1, b3})', 2, 'Repeated and alternated column by column and row by row');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (8, 7, 'GO(d1), PAINT({yellow, red}, :, right), GO(c1), PAINT({red, blue}, :, right), COPY({PAINT({red}), GO(1 right), PAINT({blue}), GO(1 up), PAINT({red}), GO(1 left), PAINT({yellow})}, {e3, a3})', 2, 'Two rows alternated, two identical squares point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (8, 9, 'GO(f3), PAINT({yellow}), GO(d3), PAINT({yellow}), GO(b3), PAINT({yellow}), GO(d1), PAINT({yellow}), GO(d5), PAINT({yellow}), GO(e4), PAINT({blue}), GO(c4), PAINT({blue}), GO(a4), PAINT({blue}), GO(c2), PAINT({blue}), GO(c6), PAINT({blue}), FILL_EMPTY(red)', 2, 'Red alternated one yes and one no vertically and horizontally, the remaining point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (8, 20, 'GO(c1), PAINT({red}, 2, diagonal up right), GO(a3), PAINT({red}, 2, diagonal up right), GO(b4), PAINT({red}, 2, diagonal up right), GO(c5), PAINT({red}, 2, diagonal up right), GO(f3), PAINT({yellow}), GO(f4), PAINT({red}), GO(e3), PAINT({red}), GO(e4), PAINT({blue}), GO(d3), PAINT({yellow}), GO(d4), PAINT({red}), GO(c3), PAINT({red}), GO(c4), PAINT({blue}), GO(b3), PAINT({yellow}), GO(a4), PAINT({blue}), GO(d1), PAINT({yellow}), GO(c2), PAINT({blue}), GO(d5), PAINT({yellow}), GO(c6), PAINT({blue})', 1, '4 pairs of red, the remaining point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (8, 19, 'GO(c1), PAINT({red}, :, diagonal up right), GO(d1), PAINT({yellow}), GO(c2), PAINT({blue}), GO(f3), PAINT({yellow}), GO(d3), PAINT({yellow}), GO(c3), PAINT({red}), GO(b3), PAINT({yellow}), GO(a3), PAINT({red}), GO(e4), PAINT({blue}), GO(d4), PAINT({red}), GO(c4), PAINT({blue}), GO(b4), PAINT({red}), GO(a4), PAINT({blue}), GO(d5), PAINT({yellow}), GO(c5), PAINT({red}), GO(d6), PAINT({red}), GO(c6), PAINT({blue})
', 1, 'One red diagonal of 4 points, the remaining point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (8, 18, 'GO(f3), PAINT({yellow, blue}, :, zig-zag down right left), GO(f4), PAINT({red}, :, zig-zag down left right), GO(c1), PAINT({red}, :, zig-zag right up down), GO(d1), PAINT({yellow, blue}, :, zig-zag right down up)', 2, 'Vertical and horizontal zig zag');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (8, 16, 'GO(c1), PAINT({red}, :, diagonal up right), GO(c3), PAINT({red}, :, diagonal up right), GO(a3), PAINT({red}, :, diagonal up right), GO(f3), PAINT({yellow}), GO(e4), PAINT({blue}), GO(d3), PAINT({yellow}), GO(c4), PAINT({blue}), GO(b3), PAINT({yellow}), GO(a4), PAINT({blue}), GO(d1), PAINT({yellow}), GO(c2), PAINT({blue}), GO(d5), PAINT({yellow}), GO(c6), PAINT({blue})', 1, 'Red diagonals, the remaining point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (9, 5, 'GO(d1), PAINT({blue, red}, :, down), GO(d2), PAINT({green, yellow}, :, down), GO(f3), PAINT({blue, red}, :, down), GO(f4), PAINT({green, yellow}, :, down), GO(d5), PAINT({blue, red}, :, down), GO(d6), PAINT({green, yellow}, :, down), GO(f3), PAINT({blue, green}, :, right), GO(e3), PAINT({red, yellow}, :, right), GO(d1), PAINT({blue, green}, :, right), GO(c1), PAINT({red, yellow}, :, right), GO(b3), PAINT({blue, green}, :, right), GO(a3), PAINT({red, yellow}, :, right)', 2, 'Alternated columns and rows (with redundancy)');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (9, 9, 'GO(d1), PAINT({blue}, :, diagonal up right), GO(c1), PAINT({red, green}, :, diagonal up right), GO(c2), PAINT({yellow, blue}, :, diagonal up right), GO(c3), PAINT({red, green}, :, diagonal up right), GO(b3), PAINT({blue, yellow}, :, diagonal up right), GO(a3), PAINT({red, green}, :, diagonal up right), GO(a4), PAINT({yellow}, :, diagonal up right)', 2, 'Diagonal by diagonal with pairs');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (9, 1, 'GO(d1), PAINT({blue}), GO(c1), PAINT({red}), GO(d2), PAINT({green}), GO(c2), PAINT({yellow}), GO(f3), PAINT({blue}), GO(e3), PAINT({red}), GO(d3), PAINT({blue}), GO(c3), PAINT({red}), GO(b3), PAINT({blue}), GO(a3), PAINT({red}), GO(f4), PAINT({green}), GO(e4), PAINT({yellow}), GO(d4), PAINT({green}), GO(c4), PAINT({yellow}), GO(b4), PAINT({green}), GO(a4), PAINT({yellow}), GO(d5), PAINT({blue}), GO(c5), PAINT({red}), GO(d6), PAINT({green}), GO(c6), PAINT({yellow})', 0, 'Point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (9, 6, 'GO(d1), PAINT({blue, green}, :, right), GO(c1), PAINT({red, yellow}, :, right), COPY({PAINT({red}), GO(1 right), PAINT({yellow}), GO(1 up), PAINT({green}), GO(1 left), PAINT({blue})}, {e3, a3})', 2, 'Two rows alternated, two identical squares point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (9, 3, 'COPY({PAINT({blue, red}, :, down), GO(1 right), PAINT({green, yellow}, :, down)}, {d1, f3, d5})', 2, 'Repeated and alternated column by column');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (10, 12, 'COPY({PAINT({blue}), GO(1 down), PAINT({yellow}), GO(1 down), PAINT({yellow}), GO(1 down), PAINT({blue}), GO(1 down), PAINT({blue}), GO(1 down), PAINT({yellow})}, {f3, f4}), GO(d1), PAINT({yellow}, 2, diagonal down right), GO(c1), PAINT({blue}, 2, diagonal up right), GO(d5), PAINT({blue}, 2, diagonal down right), GO(c5), PAINT({yellow}, 2, diagonal up right), GO(d5), PAINT({blue}), GO(d6), PAINT({yellow}), GO(c5), PAINT({yellow}), GO(c6), PAINT({blue})', 2, 'Two identical columns point by point, double diagonal on both sides (one side redundant point by point)');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (10, 1, 'GO(f3), PAINT({blue}), GO(f4), PAINT({blue}), GO(e3), PAINT({yellow}), GO(e4), PAINT({yellow}), GO(d1), PAINT({yellow}), GO(d2), PAINT({blue}), GO(d3), PAINT({yellow}), GO(d4), PAINT({yellow}), GO(d5), PAINT({blue}), GO(d6), PAINT({yellow}), GO(c1), PAINT({blue}), GO(c2), PAINT({yellow}), GO(c3), PAINT({blue}), GO(c4), PAINT({blue}), GO(c5), PAINT({yellow}), GO(c6), PAINT({blue}), GO(b3), PAINT({blue}), GO(b4), PAINT({blue}), GO(a3), PAINT({yellow}), GO(a4), PAINT({yellow})', 0, 'Point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (10, 13, 'COPY({PAINT({blue}), GO(1 down), PAINT({yellow}, 2, down), GO(2 down), PAINT({blue}, 2, down), GO(2 down), PAINT({yellow})}, {f3, f4}), GO(c1), PAINT({blue}, 2, diagonal up right), GO(d1), PAINT({yellow}, 2, diagonal down right), GO(d5), PAINT({blue}), GO(d6), PAINT({yellow}), GO(c5), PAINT({yellow}), GO(c6), PAINT({blue})', 2, 'Two columns with two rows and two squares, one side diagonals, other side point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (10, 5, 'GO(f3), PAINT({blue}, :, right), GO(d3), PAINT({yellow}, :, square), GO(b3), PAINT({blue}, :, square), GO(a3), PAINT({yellow}, :, right), MIRROR({GO(c1), PAINT({blue}), GO(c2), PAINT({yellow}), GO(d2), PAINT({blue}), GO(d1), PAINT({yellow})}, vertical)', 2, 'Two columns with two rows and two squares');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (10, 14, 'GO(f3), PAINT({blue}), GO(f4), PAINT({blue}), GO(e3), PAINT({yellow}), GO(e4), PAINT({yellow}), GO(d3), PAINT({yellow}, 2, right), GO(b3), PAINT({blue}, :, square), GO(a3), PAINT({yellow}, :, right), GO(c1), PAINT({blue}, 2, diagonal up right), GO(d1), PAINT({yellow}, 2, diagonal down right), GO(d5), PAINT({blue}, 2, diagonal down right), GO(c5), PAINT({yellow}, 2, diagonal up right)', 1, 'In the central column a square point by point, then a row then square and row, double diagonal on both sides');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (10, 8, 'GO(d1), PAINT({yellow}), GO(c1), PAINT({blue}), GO(d2), PAINT({blue}), GO(c2), PAINT({yellow}), GO(f3), PAINT({blue}), GO(e3), PAINT({yellow}, 2, down), GO(c3), PAINT({blue}, 2, down), GO(a3), PAINT({yellow}), GO(f4), PAINT({blue}), GO(e4), PAINT({yellow}, 2, down), GO(c4), PAINT({blue}, 2, down), GO(a4), PAINT({yellow}), GO(d5), PAINT({blue}), GO(c5), PAINT({yellow}), GO(d6), PAINT({yellow}), GO(c6), PAINT({blue})', 1, 'Column by column');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (10, 4, 'COPY({PAINT({blue}), GO(1 down), PAINT({yellow}, 2, down), GO(2 down), PAINT({blue}, 2, down), GO(2 down), PAINT({yellow})}, {f3, f4}), MIRROR({GO(c1), PAINT({blue}, 2, diagonal up right), GO(d1), PAINT({yellow}, 2, diagonal down right)}, vertical)', 2, 'Two identical columns with two pairs');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (10, 11, 'GO(f3), PAINT({blue}, :, right), GO(e3), PAINT({yellow}, :, right), GO(d3), PAINT({yellow}, 2, right), GO(c3), PAINT({blue}, 2, right), GO(b3), PAINT({blue}, :, right), GO(a3), PAINT({yellow}, :, right), GO(d1), PAINT({yellow}, 2, diagonal down right), GO(c1), PAINT({blue}, 2, diagonal up right), GO(d5), PAINT({blue}, 2, diagonal down right), GO(c5), PAINT({yellow}, 2, diagonal up right)', 1, 'Two columns row by row, double diagonal on both sides');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (10, 9, 'COPY({PAINT({blue}), GO(1 down), PAINT({yellow}, 2, down), GO(2 down), PAINT({blue}, 2, down), GO(2 down), PAINT({yellow})}, {f3, f4}), GO(d1), PAINT({yellow}), GO(d2), PAINT({blue}), GO(d3), PAINT({yellow}, 2, right), GO(d5), PAINT({blue}), GO(d6), PAINT({yellow}), GO(c1), PAINT({blue}), GO(c2), PAINT({yellow}), GO(c3), PAINT({blue}, 2, right), GO(c5), PAINT({yellow}), GO(c6), PAINT({blue})', 2, 'Two identical columns with with two pairs, two rows with pairs (with redundancy)');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (10, 3, 'GO(f3), PAINT({blue}, :, right), GO(d3), PAINT({yellow}, :, square), GO(b3), PAINT({blue}, :, square), GO(a3), PAINT({yellow}, :, right), MIRROR({GO(c1), PAINT({blue}, 2, diagonal up right), GO(d1), PAINT({yellow}, 2, diagonal down right)}, vertical)', 2, 'Two columns with two rows and two squares');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (10, 23, 'GO(b3), PAINT({blue}, :, square), GO(f3), PAINT({blue}, :, right), GO(c1), PAINT({blue}, 2, diagonal up right), GO(c6), PAINT({blue}, 2, diagonal up left), FILL_EMPTY(yellow)', 1, 'One square blue, other blue in pairs, the remaining yellow');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (10, 20, 'GO(f3), PAINT({blue}, :, right), GO(d3), PAINT({yellow}, :, square), GO(b3), PAINT({blue}, :, square), GO(a3), PAINT({yellow}, :, right), GO(c1), PAINT({blue}, 2, diagonal up right), GO(d1), PAINT({yellow}, 2, diagonal down right), GO(d5), PAINT({blue}, 2, diagonal down right), GO(c5), PAINT({yellow}, 2, diagonal up right)', 1, 'Two columns with two rows and two squares, double diagonal on both sides');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (10, 18, 'GO(f3), PAINT({blue}, :, right), GO(d3), PAINT({yellow}, :, square), GO(b3), PAINT({blue}, :, square), GO(a3), PAINT({yellow}, :, right), GO(d1), PAINT({yellow}), GO(d2), PAINT({blue}), GO(c1), PAINT({blue}), GO(c2), PAINT({yellow}), GO(d5), PAINT({blue}), GO(d6), PAINT({yellow}), GO(c5), PAINT({yellow}), GO(c6), PAINT({blue})', 1, 'Two columns with two rows and two squares, two squares on the sides point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (10, 19, 'COPY({PAINT({blue}), GO(1 down), PAINT({yellow}, 2, down), GO(2 down), PAINT({blue}, 2, down), GO(2 down), PAINT({yellow})}, {f3, f4}), GO(d1), PAINT({yellow}), GO(d2), PAINT({blue}), GO(c1), PAINT({blue}), GO(c2), PAINT({yellow}), GO(d5), PAINT({blue}), GO(d6), PAINT({yellow}), GO(c5), PAINT({yellow}), GO(c6), PAINT({blue})', 2, 'Two identical columns with two pairs, two squares on the sides point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (10, 25, 'GO(f3), PAINT({blue}, :, right), GO(e3), PAINT({yellow}, :, right), GO(d3), PAINT({yellow}, 2, right), GO(b3), PAINT({blue}, :, square), GO(a3), PAINT({yellow}, :, right), GO(d1), PAINT({yellow}), GO(d2), PAINT({blue}), GO(c1), PAINT({blue}), GO(c2), PAINT({yellow}), GO(d5), PAINT({blue}), GO(d6), PAINT({yellow}), GO(c5), PAINT({yellow}), GO(c6), PAINT({blue})', 1, 'In the central column a square and remaining by rows, two sides point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (10, 17, 'GO(d1), PAINT({yellow}), GO(c2), PAINT({yellow}), GO(e3), PAINT({yellow}), GO(e4), PAINT({yellow}), GO(d3), PAINT({yellow}), GO(d4), PAINT({yellow}), GO(c5), PAINT({yellow}), GO(d6), PAINT({yellow}), GO(a3), PAINT({yellow}), GO(a4), PAINT({yellow}), FILL_EMPTY(blue)', 1, 'One colour point by point, the remaining with the other colour');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (10, 21, 'COPY({PAINT({blue}), GO(1 down), PAINT({yellow}, 2, down), GO(2 down), PAINT({blue}, 2, down), GO(2 down), PAINT({yellow})}, {f3, f4}), GO(d1), PAINT({yellow}, 2, diagonal down right), GO(c1), PAINT({blue}, 2, diagonal up right), GO(d5), PAINT({blue}, 2, diagonal down right), GO(c5), PAINT({yellow}, 2, diagonal up right)', 2, 'Two identical columns with two pairs, double diagonal on both sides');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (10, 24, 'GO(f3), PAINT({blue}), GO(f4), PAINT({blue}), GO(e3), PAINT({yellow}), GO(e4), PAINT({yellow}), GO(d3), PAINT({yellow}, 2, right), GO(b3), PAINT({blue}, :, square), GO(a3), PAINT({yellow}, :, right), GO(d1), PAINT({yellow}), GO(d2), PAINT({blue}), GO(c1), PAINT({blue}), GO(c2), PAINT({yellow}), GO(d5), PAINT({blue}), GO(d6), PAINT({yellow}), GO(c5), PAINT({yellow}), GO(c6), PAINT({blue})', 1, 'In the central column a square point by point, two rows and a square, two sides point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (10, 22, 'GO(c1), PAINT({blue}, 2, diagonal up right), GO(c6), PAINT({blue}, 2, diagonal up left), GO(f3), PAINT({blue}, :, right), GO(d2), PAINT({blue}, :, diagonal down right), GO(d5), PAINT({blue}, :, diagonal down left), GO(c2), PAINT({yellow}, :, diagonal up right), GO(a3), PAINT({yellow}, :, right), GO(e3), PAINT({yellow}), GO(d4), PAINT({yellow}), GO(d1), PAINT({yellow}), GO(d6), PAINT({yellow}), GO(c5), PAINT({yellow})', 1, 'Blue in pairs and/or diagonals, one diagonal and pair yellow, the remaining point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (10, 16, 'GO(f3), PAINT({blue}, :, right), GO(e3), PAINT({yellow}, :, right), GO(d3), PAINT({yellow}, 2, right), GO(c3), PAINT({blue}, 2, right), GO(b3), PAINT({blue}, :, right), GO(a3), PAINT({yellow}, :, right), MIRROR({GO(d1), PAINT({yellow}), GO(d2), PAINT({blue}), GO(c1), PAINT({blue}), GO(c2), PAINT({yellow})}, vertical)', 2, 'Two columns row by row, two symmetric squares point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (11, 12, 'COPY({PAINT({blue}), GO(1 down), PAINT({green}), GO(1 down), PAINT({red}), GO(1 down), PAINT({yellow}), GO(1 down), PAINT({blue}), GO(1 down), PAINT({yellow})}, {f3, f4}), MIRROR({GO(d1), PAINT({green}), GO(d2), PAINT({blue}), GO(c1), PAINT({red}, 2, right)}, vertical)', 2, 'Two identical columns point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (11, 1, 'GO(d1), PAINT({green}), GO(c1), PAINT({red}), GO(d2), PAINT({blue}), GO(c2), PAINT({red}), GO(f3), PAINT({blue}), GO(e3), PAINT({green}), GO(d3), PAINT({red}), GO(c3), PAINT({yellow}), GO(b3), PAINT({blue}), GO(a3), PAINT({yellow}), GO(f4), PAINT({blue}), GO(e4), PAINT({green}), GO(d4), PAINT({red}), GO(c4), PAINT({yellow}), GO(b4), PAINT({blue}), GO(a4), PAINT({yellow}), GO(d5), PAINT({blue}), GO(c5), PAINT({red}), GO(d6), PAINT({green}), GO(c6), PAINT({red})', 0, 'Point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (11, 2, 'COPY({PAINT({blue}), GO(1 down), PAINT({green}), GO(1 down), PAINT({red}), GO(1 down), PAINT({yellow}), GO(1 down), PAINT({blue}), GO(1 down), PAINT({yellow})}, {f3, f4}), MIRROR({GO(d1), PAINT({green}), GO(d2), PAINT({blue}), GO(c1), PAINT({red}, 2, right)}, vertical)', 2, 'Two identical columns point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (11, 7, 'GO(f3), PAINT({blue}, :, right), GO(e3), PAINT({green}, :, right), GO(d3), PAINT({red}, 2, right), GO(c3), PAINT({yellow}, 2, right), GO(b3), PAINT({blue}, :, right), GO(a3), PAINT({yellow}, :, right), GO(d1), PAINT({green}), GO(d2), PAINT({blue}), GO(d3), PAINT({red}), GO(d4), PAINT({red}), GO(d5), PAINT({blue}), GO(d6), PAINT({green}), GO(c1), PAINT({red}), GO(c2), PAINT({red}), GO(c3), PAINT({yellow}), GO(c4), PAINT({yellow}), GO(c5), PAINT({red}), GO(c6), PAINT({red})', 1, 'Two columns row by row');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (11, 16, 'GO(f3), PAINT({blue}, :, right), GO(c3), PAINT({yellow}, 2, right), GO(b3), PAINT({blue}, :, right), GO(a3), PAINT({yellow}, :, right), GO(e3), PAINT({green}), GO(e4), PAINT({green}), GO(d1), PAINT({green}), GO(d6), PAINT({green}), GO(d2), PAINT({blue}), GO(d5), PAINT({blue}), FILL_EMPTY(red)', null, null);
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (11, 17, 'GO(f3), PAINT({blue}, :, right), GO(e3), PAINT({green}, :, right), GO(d3), PAINT({red}, 2, right), GO(c3), PAINT({yellow}, 2, right), GO(b3), PAINT({blue}, :, right), GO(a3), PAINT({yellow}, :, right), GO(d1), PAINT({green}), GO(d2), PAINT({blue}), GO(c1), PAINT({red}, 2, right), GO(d5), PAINT({blue}), GO(d6), PAINT({green}), GO(c5), PAINT({red}, 2, right)', null, null);
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (11, 14, 'GO(f3), PAINT({blue}), GO(f4), PAINT({blue}), GO(e3), PAINT({green}), GO(e4), PAINT({green}), GO(d3), PAINT({red}, 2, right), GO(c3), PAINT({yellow}, 2, right), GO(b3), PAINT({blue}, :, right), GO(a3), PAINT({yellow}, :, right), GO(d1), PAINT({green}), GO(c1), PAINT({red}), GO(d2), PAINT({blue}), GO(c2), PAINT({red}), GO(d5), PAINT({blue}), GO(c5), PAINT({red}), GO(d6), PAINT({green}), GO(c6), PAINT({red})', 1, 'Two identical columns point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (12, 2, 'GO(f3), PAINT({blue}), GO(f4), PAINT({green}), GO(e3), PAINT({red}), GO(e4), PAINT({yellow}), GO(d3), PAINT({blue}), GO(d4), PAINT({green}), GO(c3), PAINT({green}), GO(c4), PAINT({blue}), GO(b3), PAINT({yellow}), GO(b4), PAINT({red}), GO(a3), PAINT({red}), GO(a4), PAINT({yellow}), GO(d1), PAINT({yellow}), GO(d2), PAINT({green}), GO(d3), PAINT({blue}), GO(d4), PAINT({green}), GO(d5), PAINT({blue}), GO(d6), PAINT({red}), GO(c1), PAINT({blue}), GO(c2), PAINT({red}), GO(c3), PAINT({green}), GO(c4), PAINT({blue}), GO(c5), PAINT({yellow}), GO(c6), PAINT({green})', 0, 'Point by point with redundancy');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (12, 3, 'GO(f3), PAINT({blue}), GO(f4), PAINT({green}), GO(e3), PAINT({red}), GO(e4), PAINT({yellow}), GO(d3), PAINT({blue}, 2, diagonal down right), GO(d4), PAINT({green}, 2, diagonal down left), GO(b3), PAINT({yellow}), GO(b4), PAINT({red}), GO(a3), PAINT({red}), GO(a4), PAINT({yellow}), GO(d1), PAINT({yellow}), GO(d2), PAINT({green}), GO(d5), PAINT({blue}), GO(d6), PAINT({red}), GO(c1), PAINT({blue}), GO(c2), PAINT({red}), GO(c5), PAINT({yellow}), GO(c6), PAINT({green})', 1, 'Point by point except one square with diagonals');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (12, 5, 'GO(f3), PAINT({blue}), GO(f4), PAINT({green}), GO(e3), PAINT({red}), GO(e4), PAINT({yellow}), GO(d3), PAINT({blue}, 2, diagonal down right), GO(d4), PAINT({green}, 2, diagonal down left), GO(b3), PAINT({yellow}, 2, diagonal down right), GO(b4), PAINT({red}, 2, diagonal down left), GO(d1), PAINT({yellow}), GO(d2), PAINT({green}), GO(d5), PAINT({blue}), GO(d6), PAINT({red}), GO(c1), PAINT({blue}), GO(c2), PAINT({red}), GO(c5), PAINT({yellow}), GO(c6), PAINT({green})', 1, 'Point by point except two squares with diagonals');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (12, 4, 'GO(f3), PAINT({blue}), GO(f4), PAINT({green}), GO(e3), PAINT({red}), GO(e4), PAINT({yellow}), GO(d3), PAINT({blue}, 3, zig-zag right down up), GO(d4), PAINT({green}, 3, zig-zag left down up), GO(b3), PAINT({yellow}, 2, diagonal down right), GO(b4), PAINT({red}, 2, diagonal down left), GO(d1), PAINT({yellow}), GO(d6), PAINT({red}), GO(c1), PAINT({blue}), GO(c2), PAINT({red}), GO(c5), PAINT({yellow}), GO(c6), PAINT({green})', 1, 'L of three green, L of three blue, a square with diagonals, the remaining point by point');
INSERT INTO "ExperimentalProtocol".algorithms (schema, algorithm, commands, algorithm_dimension, description) VALUES (12, 6, 'GO(f3), PAINT({blue}), GO(d3), PAINT({blue}), GO(c4), PAINT({blue}), GO(d5), PAINT({blue}), GO(c1), PAINT({blue}), GO(d1), PAINT({yellow}), GO(e4), PAINT({yellow}), GO(c5), PAINT({yellow}), GO(b3), PAINT({yellow}), GO(a4), PAINT({yellow}), GO(a3), PAINT({red}, 2, diagonal up right), GO(c2), PAINT({red}), GO(e3), PAINT({red}), GO(d6), PAINT({red}), FILL_EMPTY(green)', 1, 'Blue and yellow point by point, red in pairs, the remaining green');
